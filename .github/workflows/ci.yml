name: Continuous Integration

on:
  pull_request:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - linux
          - linux-musl
          - linux-aarch64
          - macos
          - win-gnu
          - win-msvc

        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: linux-musl
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
          - build: linux-aarch64
            os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            rust: stable
          - build: win-gnu
            os: ubuntu-latest
            rust: stable
            target: x86_64-pc-windows-gnu
          - build: win-msvc
            os: windows-latest
            rust: stable

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust (default)
        if: matrix.target == ''
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install Rust (not default)
        if: matrix.target != ''
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - name: cargo build (default)
        if: matrix.target == ''
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose

      - name: cargo build (not default)
        if: matrix.target != ''
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: true
          args: --target ${{ matrix.target }} --verbose

      - name: cargo test (default)
        if: matrix.target == ''
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

      - name: cargo test (not default)
        if: matrix.target != ''
        uses: actions-rs/cargo@v1
        with:
          command: test
          use-cross: true
          args: --target ${{ matrix.target }} --verbose

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - run: rustup component add rustfmt
      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
